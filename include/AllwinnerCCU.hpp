#include <Foundation.hpp>

struct AllwinnerCCU {
    static const struct Instance {
        volatile AllwinnerCCU* address;
    } instances[];

    Natural32
        PLLCPUXControl,
        pad0,
        PLLAUDIOControl,
        pad1,
        PLLVIDEO0Control,
        pad2,
        PLLVEControl,
        pad3,
        PLLDDR0Control,
        pad4,
        PLLPERIPH0Control,
        PLLPERIPH1Control,
        PLLVIDEO1Control,
        pad5,
        PLLGPUControl,
        pad6,
        PLLMIPIControl,
        PLLHSICControl,
        PLLDEControl,
        PLLDDR1Control,
        CPUXAXIConfiguration,
        AHB1APB1Configuration,
        APB2Configuration,
        AHB2Configuration,
        BusClockGating[5],
        THSClock,
        pad7[2],
        NANDClock,
        pad8,
        SDMMC0Clock,
        SDMMC1Clock,
        SDMMC2Clock,
        pad9,
        TSClock,
        CEClock,
        SPI0Clock,
        SPI1Clock,
        pad10[2],
        I2SPCM0Clock,
        I2SPCM1Clock,
        I2SPCM2Clock,
        pad11,
        SPDIFClock,
        pad12[2],
        USBPHYConfiguration,
        pad13[9],
        DRAMConfiguration,
        PLLDDRConfiguration,
        MBUSReset,
        DRAMClockGating,
        DEClock,
        pad14[5],
        TCON0Clock,
        TCON1Clock,
        pad15,
        DEINTERLACEClock,
        pad16[2],
        CSIMISCClock,
        CSIClock,
        VEClock,
        ACDigitalClock,
        AVSClock,
        pad17[2],
        HDMIClock,
        HDMISlowClock,
        MBUSClock,
        pad18[3],
        MIPIDSIClock,
        pad19[13],
        GPUClock,
        pad20[23],
        PLLStableTime0,
        PLLStableTime1,
        pad21[6],
        PLLCPUXBias,
        PLLAUDIOBias,
        PLLVIDEO0Bias,
        PLLVEBias,
        PLLDDR0Bias,
        PLLPERIPH0Bias,
        PLLVIDEO1Bias,
        PLLGPUBias,
        PLLMIPIBias,
        PLLHSICBias,
        PLLDEBias,
        PLLDDR1Bias,
        PLLCPUXTuning,
        pad22[3],
        PLLDDR0Tuning,
        pad23[3],
        PLLMIPITuning,
        pad24[2],
        PLLPERIPH1PatternControl,
        PLLCPUXPatternControl,
        PLLAUDIOPatternControl,
        PLLVIDEO0PatternControl,
        PLLVEPatternControl,
        PLLDDR0PatternControl,
        pad25,
        PLLVIDEO1PatternControl,
        PLLGPUPatternControl,
        PLLMIPIPatternControl,
        PLLHSICPatternControl,
        PLLDEPatternControl,
        PLLDDR1PatternControl0,
        PLLDDR1PatternControl1,
        pad26[3],
        BusSoftwareReset0,
        BusSoftwareReset1,
        BusSoftwareReset2,
        pad27,
        BusSoftwareReset3,
        pad28,
        BusSoftwareReset4,
        pad29[5],
        CCMSecuritySwitch,
        pad30[3],
        PSControl,
        PSCounter,
        pad31[6],
        PLLLockControl;
};
